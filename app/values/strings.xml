<resources>
    <string name="app_name">Jitaku App</string>
    <string name="main">Main</string>
    <string name="principal">Jugar</string>
    <string name="btMain">Principal</string>
    <string name="desarrollador">Desarrollador:</string>
    <string name="hern_ndez_venegas_n_jos_zenaido">Hernández Venegas   José Zenaido</string>
    <string name="aguayo_gonzalez_n_leonardo_israel">Aguayo Gonzalez   Leonardo Israel</string>
    <string name="algoritmos_y_diagramas_de_flujo">Algoritmos y diagramas de flujo</string>
    <string name="description_algoritmo">Algoritmo: Se definen como una secuencia de pasos que permiten dar solución algun problema. Diagrama de flujo:Representación grafica de la secuencia de pasos a seguir, para dar solución algun problema.   En la siguiente ilustración se pueden observar algunos elementos que componen el diagrama de flujo, para dar solución algún problema.</string>
    <string name="significado_diagrama">Ahora conoceremos el significado de cada componente del diagrama de flujo:</string>
    <string name="ejemplo_algoritmo">Ejemplo de algoritmo : Un algoritmo que permita conocer el proceso de preparación de una gelatina de agua Se genera una lista de los pasos a seguir: INICIO  *1.-Poner a hervir un litro de agua  *2.- Agregar al litro de agua hervida la gelatina  *3.- Revolver hasta que se disuelva  *4.- Servir en el molde, esperar unos minutos y poner en el refrigerador  FIN</string>
    <string name="flowchart">Diagrama de flujo del anterior algoritmo</string>
    <string name="practicar">Practicar</string>
    <string name="biblioteca">Biblioteca</string>
    <string name="escribe_un_mensaje">Escribe un mensaje</string>
    <string name="que_es_una_clase">¿Que es una clase?</string>
    <string name="descr_clase">Es una plantilla que te permitira crear objetos, de manera que   podemos definir la clase \'Persona\' en la cual encontraremos   algunas carcateristicas y comportamientos propias de una persona.</string>
    <string name="propiedades_del_objeto_persona">Propiedades del objeto persona</string>
    <string name="propiedades">Podemos definir algunas propiedades del objeto persona como:   * Nombre  * Apellidos   *Edad; entre otros.   Para establecer estas propiedades dentro de la clase   creamos variables, cuidándo de asignarle a cada   propiedad el tipo de dato que le corresponde.</string>
    <string name="variables">Dentro de la definición de variables podemos encontrar los siguinetes tipos de datos:</string>
    <string name="qu_es_un_m_todo">¿Qué es un método?</string>
    <string name="method">Un método se define como el comportamiento del objeto, como se mencionaba anteriormente del objeto Persona cuenta con actividades como :  dormir, comer, caminar, entre otros.  Los culaes se definen con la entrada de parametros o sin parametros.  Como se puede ver a continuación:</string>
    <string name="set_get">Existen los métodos getter y setter, los cuales permiten asignarle un valor a las variables o en su caso extraer un valor.</string>
    <string name="ejercicios">Ejercicios</string>
    <string name="titulo">Titulo</string>
    <string name="descripcion">Descripcion</string>
    <string name="setup_name_hint">Your Name...</string>
    <string name="setup_save_btn">Save Account Settings</string>
    <string name="setup_name_hint_text">Your Name ...</string>
    <string name="setup_btn_name_text">Save Account Settings</string>
    <string name="post_desc_hint">Add Description ...</string>
    <string name="new_post_btn_hint">Post Blog</string>
    <string name="bottom_home_text">Home</string>
    <string name="bottom_notification_text">Notification</string>
    <string name="bottom_ac_text">Account</string>
    <string name="action_search_text">Search</string>
    <string name="action_setting_text">Account Settings</string>
    <string name="action_logout_text">Logout</string>
    <string name="desc_coup">El acoplamiento es el grado de conocimiento que una clase A tiene sobre una clase B. Lo ideal es conseguir que la clase A, sólo conozca de la clase B lo necesario para que la clase A pueda hacer uso de los métodos de la clase B, pero no conozca nada a cerca de cómo estos métodos están implementados.</string>
    <string name="coupling">Coupling:</string>
    <string name="algoritmo">Algoritmo</string>
    <string name="desc_algoritmo">Conjunto ordenado de operaciones sistemáticas que permite hacer un cálculo y hallar la solución de un tipo de problemas.</string>
    <string name="desc_analisis">Examen detallado de una cosa para conocer sus características o cualidades, o su estado, y extraer conclusiones, que se realiza separando o considerando por separado las partes que la constituyen.</string>
    <string name="analisis">Analisis</string>
    <string name="action_settings">Settings</string>
    <string name="texto_titulo">El Androide Ahorcado</string>
    <string name="texto_subtitulo">¡Introduce una palabra y haz que alguien juegue a adivinarla!</string>
    <string name="texto_boton_palabra">Introducir Palabra</string>
    <string name="texto_boton_jugar">Jugar</string>
    <string name="texto_boton_salir">Salir</string>
    <string name="texto_boton_menu">Ir al Menú</string>
    <string name="texto_auxiliar_icono">Icono ahorcado</string>
    <string name="texto_titulo_insertar">Insertar palabra</string>
    <string name="texto_subtitulo_insertar">Inserta la palabra que tendrá que adivinar el jugador:</string>
    <string name="texto_pista_insertar">Palabra a adivinar</string>
    <string name="texto_boton_insertar">Insertar</string>
    <string name="title_activity_insercion">Inserción</string>
    <string name="error_falta_palabra">Introduce una palabra antes</string>
    <string name="error_formato_palabra">El formato de la palabra no es correcto</string>
    <string name="title_activity_juego">Juego</string>
    <string name="texto_boton_volver">Volver</string>
    <string name="texto_titulo_resultado">Resultado:</string>
    <string name="texto_boton_nuevo_juego">Insertar nueva palabra</string>
    <string name="title_activity_resultado">Resultado</string>
    <string name="resultado_ganar">¡ACERTASTE!</string>
    <string name="resultado_perder">¡PERDISTE!</string>
    <string name="texto_titulo_fallos">Fallos:</string>
    <string name="title_activity_game">Game</string>
    <string name="play">Play Now...</string>
    <string name="set">Setting</string>
    <string name="ex">Exit</string>
    <string name="title_activity_setting">Setting</string>
    <string name="vol">Volume</string>
    <string name="test">test</string>
    <string name="title_activity_highscore">Highscore</string>
    <string name="hs">Highscore :</string>
    <string name="score">HighScore</string>
    <string name="act_memorama">Memorama</string>
    <string name="juegonuevo">Juego Nuevo</string>
    <string name="zena">Hernández Venegas   José Zenaido</string>
    <string name="lalo">Rico Sandoval   Jesús Eduardo</string>
    <string name="jas">Santana Mares   Jasmin Aide</string>
    <string name="leo">Aguayo Gonzalez   Leonardo Israel</string>
    <string name="abstraccClass">Clases abstractas</string>
    <string name="Abs_description">Este tipo de clases nos permiten crear método generales” que recrean un comportamiento común, pero sin especificar cómo lo hacen. A nivel de código tienen por particularidad que algunos de sus métodos no tienen cuerpo de declaración, ¿qué quiere decir esto? no tienen las llaves { } ni código dentro de ellos y deben estar precedidos por la palabra clave abstract. Si una clases contiene uno o más métodos abstractos está clase debe ser abstracta. Estas clases como son generalidades no pueden ser instanciadas por ningún objeto (se dice que su nivel de abstracción es demasiado alto), entonces su único fin es ser heredado/extendido por otras clases.</string>
    <string name="Abs_descri">– Las clases que hereden de la clase Abstracta deben implementar todos los métodos abstractos. – Se debe tener presente que las clases abstractas sí pueden heredar de otras clases. – La firma o parámetros de los métodos así como el tipo de dato deben respetarse, de lo contrario se está hablando de otro método totalmente diferente.</string>
    <string name="agregaci_n_y_asociaci_n">Agregación y Asociación</string>
    <string name="agregation_description">La asociación se podría definir como el momento en que dos objetos se unen para trabajar juntos y así, alcanzar una meta.  Un punto a tomar muy en cuenta es que ambos objetos son independientes entre sí, veremos un poco más adelante qué implicación tiene esto. Para validar la asociación, la frase “Usa un”, debe tener sentido: El ingeniero usa una computadora El cliente usa tarjeta de crédito. Representaremos la relación:  *El cliente usa tarjeta de crédito.</string>
    <string name="agregation_descr">Agregación  Es muy similar a la relación de Asociación solo varía en la multiplicidad ya que en lugar de ser una relación uno a uno es de uno a muchos.</string>
   <string name="algoritmo_description">Algoritmo: es un conjunto de instrucciones o reglas bien definidas, organizadas y finitas que nos permite realizar una determinada actividad siguiendo una serie de pasos sucesivos y no ambiguos.  Diagrama de flujo:herramientas gráficas para la representación visual y gráfica de algoritmos, compuestos por una serie de símbolos icónicos unidos por flechas.</string>
    <string name="ejemploAlgori">En la siguiente ilustración se pueden observar algunos elementos que componen el diagrama de flujo, para dar solución algún problema.</string>
    <string name="desc_algorit">Ahora conoceremos el significado de cada componente del diagrama de flujo:</string>
    <string name="ejemplo2Algor">Ejemplo de algoritmo : Un algoritmo que permita conocer el proceso de preparación de una gelatina de agua Se genera una lista de los pasos a seguir: INICIO  *1.-Poner a hervir un litro de agua  *2.- Agregar al litro de agua hervida la gelatina  *3.- Revolver hasta que se disuelva  *4.- Servir en el molde, esperar unos minutos y poner en el refrigerador  FIN</string>
    <string name="atributos">Atributos:</string>
    <string name="atrib_desc">Los atributos son las características individuales que diferencian un objeto de otro y determinan su apariencia, estado u otras cualidades. Los atributos se guardan en variables denominadas de instancia, y cada objeto particular puede tener valores distintos para estas variables.</string>
    <string name="ejemploatrib">Un método se define como el comportamiento del objeto, como se mencionaba anteriormente del objeto Persona cuenta con actividades como :  dormir, comer, caminar, entre otros.  Los culaes se definen con la entrada de parametros o sin parametros.  Como se puede ver a continuación:</string>
    <string name="getset">Existen los métodos getter y setter, los cuales permiten asignarle un valor a las variables o en su caso extraer un valor.</string>
    <string name="propiedad">Es una propiedad que permite la declaración de nuevas clases a partir de otras ya existentes. Esto proporciona una de las ventajas principales de la Programación Orientada a Objetos: la reutilización de código previamente desarrollado ya que permite a una clase más específica incorporar la estructura y comportamiento de una clase más general.</string>
    <string name="qu_es_una_clase">Qué es una clase?</string>
    <string name="definicion_clase">Es una plantilla que te permitira crear objetos, de manera que   podemos definir la clase \'Persona\' en la cual encontraremos   algunas carcateristicas y comportamientos propias de una persona.</string>
    <string name="contadores_y_acumuladores">Contadores y Acumuladores</string>
    <string name="qu_es_un_acumulador">¿Qué es un acumulador?</string>
    <string name="define_acumulador">Son las variables que suma sobre ella misma un grupo de valores para así obtener la sumatoria total de todos los valores.</string>
    <string name="qu_es_un_ciclo_o_bucles">¿Qué es un ciclo o bucles?</string>
    <string name="definicion_ciclo">Es una ejecución repetitiva que tiene un inicio y un fin de dicho programa.</string>
    <string name="sintaxis_ciclo_do">do { System.out.println (\'Acciones hacer\');}</string>
    <string name="multiplicar_la_base_por_la_altura">Multiplicar la base por la altura</string>
    <string name="solicitar_la_altura_de_la_figura">Solicitar la altura de la figura</string>
    <string name="mostrar_el_resultado_de_la_operacion">Mostrar el resultado de la operacion</string>
    <string name="solicitar_base_de_la_figura">Solicitar base de la figura</string>
    <string name="tipos_de_datos">Tipos de datos</string>
    <string name="tipos_de_datos_definicion">En los programas en Java puede ser necesario tanto el uso de datos elementales como de datos complejos. Por eso en Java se usa el término “Tipos de datos” para englobar a cualquier cosa que ocupa un espacio de memoria y que puede ir tomando distintos valores o características durante la ejecución del programa  Dentro de la definición de variables podemos encontrar los siguinetes tipos de datos:</string>
    <string name="diagrama_de_flujo">Diagrama de Flujo</string>
    <string name="indicacion_arrastrar">Arrastra y suelta las figuras en su nombre correspondiente</string>
    <string name="inicio_fin">INICIO/FIN</string>
    <string name="impresi_n">IMPRESIÓN</string>
    <string name="proceso">PROCESO</string>
    <string name="decisi_n">DECISIÓN</string>
    <string name="propiedad_antes_creada">Cuál no es una propiedad de la clase antes creada?</string>
    <string name="etodo_extraer_el_nombre">Reto 4: Método para extraer el nombre a la clase Animal</string>
    <string name="verificar">Verificar</string>
    <string name="identifica_a_que_hacen_refencia_cada_problema_planteado">Identifica a que hacen refencia cada problema planteado.</string>
    <string name="ruben_problematica_programa">A Rubén le solicitan un programa donde el nombre del usuario se muestre junto con un saludo de bienvenida, además le indique su porcentaje de avances.  A estos parámetros se les conoce como:</string>
    <string name="salida">SALIDA</string>
    <string name="entrada">ENTRADA</string>
    <string name="ponte_a_prueba_con_los_tipos_de_datos_n">Ponte a prueba con los tipos de datos</string>
    <string name="se_pide_determinar_si_una_persona_es_mayor_de_edad_para_esto_se_usa_una_variable_de_tipo_boolean_es_correcto">Se pide determinar si una persona es mayor de edad, para esto se usa una variable de tipo boolean. Es correcto?</string>
    <string name="declara_los_tipos_de_datos_correspondientes_a_las_siguenites_variables_fecha_cantidad_verdadero_falso">Declara los tipos de datos correspondientes a las siguenites variables fecha,cantidad, verdadero/falso</string>
    <string name="area_triangulo">Se pide mostrar el area de un triangulo que tipo de dato debo declarar?</string>


</resources>
